package zs;
import java.util.*;
public class ChessBoard {
	public static String[][]chessboard = new String[8][8];
	public static final String WHITE_KING = "♚";
    public static final String BLACK_ROOK = "♜";
    public static final String BLACK_PAWN = "♟";
    public static final String WHITE_PAWN = "♙";
    public static final String WHITE_KNIGHT = "♞";
    public static final String BLACK__KNIGHT = "♞";
    public static final String RESET = "  \033[0m";
    public static final String WHITE_BISHOP = "♗";
    public static final String BLACK_BISHOP = "♝";
    public static final String WHITE_QUEEN = "♕";
    public static final String BLACK_QUEEN = "♛";
    
	public static void main(String[] args){
		ChessBoard che=new ChessBoard();
		Scanner sc =new Scanner(System.in);
//		che.Board();
//		che.display();
//		che.boardWithPieces();
//		che.placeTheKing(5, 4);
//		che.placeTheRook(4, 5);
//		che.placeTheBishop(4, 5);
//		che.placeTheKnight(5 ,5);
		che.showMenu();
	}
    public void Board() {
//    	chessboard= new String[8][8];
    	for(int i=0;i<8;i++) {
    		for(int j=0;j<8;j++) {
    			if((i+j)%2 ==0) {
    				ChessBoard.chessboard[i][j]="   ";
    			}
    			else {
    				ChessBoard.chessboard[i][j]="   ";
    			}
    		}
    	}
    }
    public void display() {
//    	int num= MyScanner.getNumber("Enter the ID : ");
    	for(int i=0;i<8;i++) {
    		for(int j=0;j<8;j++) {
    			if((i+j)%2==0) {
    			System.out.print(mycolor.White+ChessBoard.chessboard[i][j]+mycolor.RESET);
    			
    		}
    			else {
    				System.out.print(mycolor.Black+ChessBoard.chessboard[i][j]+mycolor.RESET);
    			}
    		
    }
    		System.out.println();
    	}
    	
}
    public void boardWithPieces() {
    	for(int i=0;i<8;i++) {
    		if(i%2==0) {
    		ChessBoard.chessboard[1][i]=mycolor.Black+" "+BLACK_PAWN+" "+mycolor.RESET;
    		}
    		else if(!(i%2==0)) {
    		ChessBoard.chessboard[1][i]=mycolor.White+" "+BLACK_PAWN+" "+mycolor.RESET;
    		}
    		if(i%2==0) {
        		ChessBoard.chessboard[6][i]=mycolor.White+" "+BLACK_PAWN+" "+mycolor.RESET;
        		}
    		else if(!(i%2==0)) {
        		ChessBoard.chessboard[6][i]=mycolor.Black+" "+BLACK_PAWN+" "+mycolor.RESET;
        		}
    		
       
    	}
    	for(int i=2;i<6;i++) {
    		for(int j=0;j<8;j++) {
    			ChessBoard.chessboard[i][j]="   ";    			
    		
    		}
    	}
    	ChessBoard.chessboard[0][0]=ChessBoard.chessboard[7][7]=mycolor.White +" "+BLACK_ROOK+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][7]=ChessBoard.chessboard[7][0]=mycolor.Black +" "+BLACK_ROOK+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][1]=ChessBoard.chessboard[7][6]=mycolor. Black+" "+BLACK__KNIGHT+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][6]=ChessBoard.chessboard[7][1]=mycolor.White +" "+BLACK__KNIGHT+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][2]=ChessBoard.chessboard[7][5]=mycolor.WHITE +" "+BLACK_BISHOP+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][5]=ChessBoard.chessboard[7][2]=mycolor.Black+" "+BLACK_BISHOP+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][3]=ChessBoard.chessboard[7][4]=mycolor.Black+" "+WHITE_KING+" "+mycolor.RESET;
    	ChessBoard.chessboard[0][4]=ChessBoard.chessboard[7][3]=mycolor.White+" "+BLACK_QUEEN+" "+mycolor.RESET;
    	
//    	Board();
    	display();
    	
    }
    public void placeTheKing(int x,int y) {
    	Board();
    	for(int i=-1;i<2;i++) {
    		for(int j=-1;j<2;j++) {
    			int row=x+i;
    			int col=y+j;
    			if((row>-1&&row<8)&&(col>-1&&col<8)) {
    				chessboard[row][col]=" X ";
    			}
    	}
    }
    	chessboard[x][y]=" "+WHITE_KING+" ";
    	display();
    	
}
    public void placeTheRook(int x,int y) {
    	Board();
        for (int i=-chessboard.length;i<chessboard.length;i++){
            if (x-i >=0 && x-i <8){
                chessboard[x-i][y]=" X ";
            }
            if (y+i >=0 && y+i <8){
                chessboard[x][y+i]=" X ";
            }
            if (x+i==x && y+i==y){
                chessboard[x][y]=" ♖ ";
            }
        }
        display();
    
}
    public void placeTheBishop(int x,int y) {
    	Board();
    	for(int i=-chessboard.length;i<chessboard.length;i++) {
    		if (x+i >=0 && y+i<8) {
    			chessboard[x+i][y+i]=" X ";
    		}
            if ((x-i >=0 && x-i <8) && (y+i >=0 && y+i <8)){
                chessboard[x-i][y+i]=" X ";
            }
    		 if (x+i==x && y+i==y){
                 chessboard[x][y]=" ♝ ";
             }
    	}
    	display();
    }
    public void placeTheKnight(int x,int y) {
    	Board();
    	for(int i=-chessboard.length;i<chessboard.length;i++) {
    		if(x+i>=0 && y+i<8) {
    			chessboard[x+1][y+2]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x+1][y-2]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x-1][y+2]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x-1][y-2]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x+2][y-1]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x-2][y-1]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x+2][y+1]=" X ";
    		}
    		if(x+i>=0 && y+i<8) {
    			chessboard[x-2][y+1]=" X ";
    		}
    		if (x+i==x && y+i==y){
                 chessboard[x][y]=" ♞ ";
            }
    	}
    	display();
    }
    public void placeTheQueen(int x,int y) {
    	Board();
    	for(int i=-chessboard.length;i<chessboard.length;i++) {
    		if (x+i >=0 && y+i<8) {
    			chessboard[x+i][y+i]=" X ";
    		}
            if ((x-i >=0 && x-i <8) && (y+i >=0 && y+i <8)){
                chessboard[x-i][y+i]=" X ";
            }
            if (x-i >=0 && x-i <8){
                chessboard[x-i][y]=" X ";
            }
            if (y+i >=0 && y+i <8){
                chessboard[x][y+i]=" X ";
            }
    		 if (x+i==x && y+i==y){
                 chessboard[x][y]=" ♕ ";
             }
    	}
    	display();
    }
    public void showMenu() {
    	Scanner sc=new Scanner(System.in);
    	while(true){
    	System.out.println("1.Empty Board \n 2.Board with Pieces \n 3.Tutorial \n 4.Exit");
    	int choice=sc.nextInt(); 
    	switch(choice) {
    	case 1:
    		Board();
    		display();
    		break;
    	case 2:
    		boardWithPieces(); 
    		break;
    	case 3:
    		while(true) {
    		System.out.println("Choose the Piece to see the Place it moves!\n 1.King\n 2.Rook\n 3.Bishop\n 4.Queen\n 5.Knight\n 6.Exit");
    		System.out.println("Enter your choice:");
    		int op=sc.nextInt();
    		switch(op) {
    		case 1:
    			placeTheKing(4,5);
    			break;
    		case 2:
    			placeTheRook(4,5);
    			break;
    		case 3:
    			placeTheBishop(4,5);
    			break;
    		case 4:
    			placeTheQueen(4,5);
    			break;
    		case 5:
    			placeTheKnight(4,5);
    			break;
    		case 6:
    			System.exit(1);
    			
    		}
    		}
    	case 4:
    		System.exit(0);
    	}
    }
}
}

